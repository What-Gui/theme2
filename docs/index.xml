<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Foreword and Syllabus on My New Hugo Site</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Foreword and Syllabus on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Foreword and Syllabus</title>
      <link>http://localhost:1313/docs/lec_00_0_foreword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_00_0_foreword/</guid>
      <description>&lt;h1 id=&#34;foreword-and-syllabus&#34;&gt;&#xD;&#xA;  Foreword and Syllabus&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#foreword-and-syllabus&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Human ingenuity cannot concoct a cipher which human ingenuity cannot&#xA;resolve.&amp;rdquo;&lt;/em&gt; Edgar Allan Poe, 1841&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Cryptography - the art or science of &amp;ldquo;secret writing&amp;rdquo; - has been around for&#xA;several millenia. For almost all that time, Edgar Allan Poe&amp;rsquo;s quote above&#xA;held true. Indeed, the history of cryptography is littered with the figurative&#xA;corpses of cryptosystems believed secure and then broken, and sometimes with the&#xA;actual corpses of those who have mistakenly placed their faith in these&#xA;cryptosystems. Yet, something changed in the last few decades. New cryptosystems&#xA;have been found that have not been broken despite being subjected to immense&#xA;efforts involving both human ingenuity and computational power on a scale that&#xA;completely dwarves the &amp;ldquo;crypto breakers&amp;rdquo; of Poe&amp;rsquo;s time. Even more amazingly,&#xA;these cryptosystems are not only seemingly unbreakable, but they also achieve&#xA;this under much harsher conditions. Not only do today&amp;rsquo;s attackers have more&#xA;computational power but they also have more data to work with. In Poe&amp;rsquo;s age, an&#xA;attacker would be lucky if they got access to more than a few ciphertexts with&#xA;known plaintexts. These days attackers might have massive amounts of data -&#xA;terabytes or more - at their disposal. In fact, with &lt;em&gt;public key&lt;/em&gt; encryption,&#xA;an attacker can generate as many ciphertexts as they wish.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mathematical Background</title>
      <link>http://localhost:1313/docs/lec_00_1_mathematical-background/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_00_1_mathematical-background/</guid>
      <description>&lt;h1 id=&#34;mathematical-background&#34;&gt;&#xD;&#xA;  Mathematical Background&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mathematical-background&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;This is a brief review of some mathematical tools, and especially probability&#xA;theory, that we will use in this course.&#xA;See also the &lt;a href=&#34;http://www.introtcs.org/public/lec_00_1_math_background.html&#34;&gt;mathematical background&lt;/a&gt; and &lt;a href=&#34;http://www.introtcs.org/public/lec_15_probability.html&#34;&gt;probability&lt;/a&gt; lectures in my &lt;a href=&#34;http://www.introtcs.org/&#34;&gt;Notes on Introduction to Theoretical Computer Science&lt;/a&gt;, which share much of the following text.&lt;/p&gt;&#xA;&lt;p&gt;At Harvard, much of this material (and more) is taught in Stat 110 &amp;ldquo;Introduction&#xA;to Probability&amp;rdquo;, CS20 &amp;ldquo;Discrete Mathematics&amp;rdquo;, and AM107 &amp;ldquo;Graph Theory and&#xA;Combinatorics&amp;rdquo;. Some good sources for this material are the lecture notes by&#xA;Papadimitriou and Vazirani (see home page of Umesh Vaziarani), Lehman, Leighton&#xA;and Meyer from MIT Course 6.042 &amp;ldquo;Mathematics For Computer Science&amp;rdquo; (Chapters 1-2&#xA;and 14 to 19 are particularly relevant), and the Berkeley course CS 70. The mathematical tool we use most often&#xA;is discrete probability. The &amp;ldquo;Probabilistic Method&amp;rdquo; book by Alon and Spencer is&#xA;a great resource in this area. Also, the books of Mitzenmacher and Upfal and&#xA;Prabhakar and Raghavan cover probability from a more algorithmic perspective.&#xA;For an excellent popular discussion of some of the mathematical concepts we&amp;rsquo;ll talk about&#xA;see the book &lt;em&gt;&amp;ldquo;How Not to Be Wrong&amp;rdquo;&lt;/em&gt; by Jordan Ellenberg.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>http://localhost:1313/docs/lec_01_introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_01_introduction/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;&#xD;&#xA;  Introduction&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Additional reading:&lt;/strong&gt; Chapters 1 and 2 of Katz-Lindell book. Sections 2.1 (Introduction) and 2.2 (Shannon ciphers and perfect security) in the Boneh Shoup book. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ever since people started to communicate, there were some messages that they&#xA;wanted kept secret. Thus cryptography has an old though arguably &lt;em&gt;undistinguished&lt;/em&gt; history. For a long time cryptography shared similar features with Alchemy as a domain in which many otherwise smart people would be drawn into making fatal mistakes. Indeed, the history of cryptography is littered with the figurative corpses of cryptosystems believed secure and then broken, and sometimes with the actual corpses of those who have mistakenly placed their faith in these cryptosystems.&#xA;The definitive text on the history of cryptography is David Kahn&amp;rsquo;s &amp;ldquo;The Codebreakers&amp;rdquo;, whose title already hints at the ultimate fate of most cryptosystems.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; (See also &amp;ldquo;The Code Book&amp;rdquo; by Simon Singh.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Computational security</title>
      <link>http://localhost:1313/docs/lec_02_computational-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_02_computational-security/</guid>
      <description>&lt;h1 id=&#34;computational-security&#34;&gt;&#xD;&#xA;  Computational Security&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#computational-security&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Additional reading:&lt;/strong&gt;  Sections 2.2 and 2.3 in Boneh-Shoup book. Chapter 3 up to and including Section 3.3 in Katz-Lindell book.&lt;/p&gt;&#xA;&lt;p&gt;Recall our cast of characters- Alice and Bob want to communicate securely over a&#xA;channel that is monitored by the nosy Eve. In the last lecture, we have seen the&#xA;definition of &lt;em&gt;perfect secrecy&lt;/em&gt; that guarantees that Eve cannot learn &lt;em&gt;anything&lt;/em&gt;&#xA;about their communication beyond what she already knew. However, this security&#xA;came at a price. For every bit of communication, Alice and Bob have to exchange&#xA;in advance a bit of a secret key. In fact, the proof of this result gives rise&#xA;to the following simple Python program that can break every encryption&#xA;scheme that uses, say, a $128$ bit key, with a $129$ bit message:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pseudorandomness</title>
      <link>http://localhost:1313/docs/lec_03_pseudorandom-generators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_03_pseudorandom-generators/</guid>
      <description>&lt;h1 id=&#34;pseudorandomness&#34;&gt;&#xD;&#xA;  Pseudorandomness&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pseudorandomness&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Reading:&lt;/strong&gt; Katz-Lindell Section 3.3, Boneh-Shoup Chapter 3&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;The nature of randomness has troubled philosophers, scientists, statisticians&#xA;and laypeople for many years.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; Over the years people have given different&#xA;answers to the question of what does it mean for data to be random, and what is&#xA;the nature of probability. The movements of the planets initially looked random&#xA;and arbitrary, but then early astronomers managed to find &lt;em&gt;order&lt;/em&gt; and make&#xA;some &lt;em&gt;predictions&lt;/em&gt; on them. Similarly, we have made great advances in predicting&#xA;the weather and will probably continue to do so.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pseudorandom functions</title>
      <link>http://localhost:1313/docs/lec_04_pseudorandom-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_04_pseudorandom-functions/</guid>
      <description>&lt;h1 id=&#34;pseudorandom-functions&#34;&gt;&#xD;&#xA;  Pseudorandom functions&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pseudorandom-functions&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Reading:&lt;/strong&gt; &lt;a href=&#34;https://web.engr.oregonstate.edu/~rosulekm/crypto/chap6.pdf&#34;&gt;Rosulek Chapter 6&lt;/a&gt; has a good description of pseudorandom functions. Katz-Lindell cover pseudorandom functions in a different order than us. The topics of this lecture and the next ones are covered in KL sections 3.4-3.5 (PRFs and CPA security), 4.1-4.3 (MACs), and 8.5 (construction of PRFs from PRG).&lt;/p&gt;&#xA;&lt;p&gt;In the last lecture we saw the notion of &lt;em&gt;pseudorandom generators&lt;/em&gt;, and introduced the &lt;strong&gt;PRG conjecture&lt;/strong&gt;, which stated that there exists a pseudorandom&#xA;generator mapping $n$ bits to $n+1$ bits. We have seen the &lt;em&gt;length extension&lt;/em&gt; theorem, which states that given such a pseudorandom generator, there exists a generator mapping $n$ bits to $m$ bits for an arbitrarily large polynomial $m(n)$. But can we extend it even further? Say, to $2^n$ bits?&#xA;Does this question even make sense? And why would we want to do that? This is the topic of this lecture.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PRFs from PRGs</title>
      <link>http://localhost:1313/docs/lec_05_prf-from-prg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_05_prf-from-prg/</guid>
      <description>&lt;h1 id=&#34;pseudorandom-functions-from-pseudorandom-generators-and-cpa-security&#34;&gt;&#xD;&#xA;  Pseudorandom functions from pseudorandom generators and CPA security&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pseudorandom-functions-from-pseudorandom-generators-and-cpa-security&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In this lecture we will see that the PRG conjecture implies the PRF conjecture. We will also see how PRFs imply an encryption scheme that is secure even when we encrypt multiple messages with the same key.&lt;/p&gt;&#xA;&lt;p&gt;We have seen that PRF&amp;rsquo;s (pseudorandom functions) are extremely useful, and we&amp;rsquo;ll see some more applications of them later on. But are they perhaps too amazing to exist? Why would someone imagine that such a wonderful object is feasible? The answer is the following theorem:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chosen Ciphertext Security</title>
      <link>http://localhost:1313/docs/lec_06_cca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_06_cca/</guid>
      <description>&lt;h1 id=&#34;chosen-ciphertext-security&#34;&gt;&#xD;&#xA;  Chosen Ciphertext Security&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chosen-ciphertext-security&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;short-recap&#34;&gt;&#xD;&#xA;  Short recap&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#short-recap&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Let&amp;rsquo;s start by reviewing what we have learned so far:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We can mathematically define security for encryption schemes. A natural definition is &lt;em&gt;perfect secrecy&lt;/em&gt;: no matter what Eve does, she can&amp;rsquo;t learn anything about the plaintext that she didn&amp;rsquo;t know before. Unfortunately this requires the key to be as long as the message, thus placing a severe limitation on the usability of it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hash Functions, Random Oracles, and Bitcoin</title>
      <link>http://localhost:1313/docs/lec_07_hash_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_07_hash_functions/</guid>
      <description>&lt;h1 id=&#34;hash-functions-random-oracles-and-bitcoin&#34;&gt;&#xD;&#xA;  Hash Functions, Random Oracles, and Bitcoin&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hash-functions-random-oracles-and-bitcoin&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;We have seen pseudorandom generators, functions and permutations, as well as Message Authentication codes, CPA and CCA secure&#xA;encryptions. This week we will talk about cryptographic hash functions and some of their magical properties. We motivate this by the &lt;em&gt;Bitcoin&lt;/em&gt;&#xA;cryptocurrency. As usual our discussion will be highly abstract and idealized, and any resemblance to real cryptocurrencies, living or dead,&#xA;is purely coincidental.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hash functions II: Key derivations, protecting passwords, Merkle trees</title>
      <link>http://localhost:1313/docs/lec_08_hash_functions_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_08_hash_functions_part2/</guid>
      <description>&lt;h1 id=&#34;key-derivation-protecting-passwords-slow-hashes-merkle-trees&#34;&gt;&#xD;&#xA;  Key derivation, protecting passwords, slow hashes, Merkle trees&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-derivation-protecting-passwords-slow-hashes-merkle-trees&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Last lecture we saw the notion of cryptographic hash functions which are functions that behave like a random function, even in settings (unlike that of standard PRFs) where the adversary has access to the key that allows them to evaluate the hash function.&#xA;Hash functions have found a variety of uses in cryptography, and in this lecture we survey some of their other applications.&#xA;In some of these cases, we only need the relatively mild and well-defined property of &lt;em&gt;collision resistance&lt;/em&gt; while in others we only know how to analyze security under the stronger (and not precisely well defined) &lt;em&gt;random oracle heuristic&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Public key cryptography</title>
      <link>http://localhost:1313/docs/lec_10_public_key_intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_10_public_key_intro/</guid>
      <description>&lt;h1 id=&#34;public-key-cryptography&#34;&gt;&#xD;&#xA;  Public key cryptography&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#public-key-cryptography&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;People have been dreaming about heavier-than-air flight since at least the days of Leonardo Da Vinci (not to mention Icarus from Greek mythology).&#xA;Jules Verne wrote with rather insightful details about going to the moon in 1865.&#xA;But, as far as I know, no one had considered the possibility of communicating securely without first exchanging a shared secret key until about 50 years ago. This is surprising given the thousands of years people have been using secret writing! However, in the late 1960&amp;rsquo;s and early 1970&amp;rsquo;s, several people started to question this &amp;ldquo;common wisdom&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Public key encryption candidates</title>
      <link>http://localhost:1313/docs/lec_11_concrete_pkc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_11_concrete_pkc/</guid>
      <description>&lt;h1 id=&#34;concrete-candidates-for-public-key-crypto&#34;&gt;&#xD;&#xA;  Concrete candidates for public key crypto&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#concrete-candidates-for-public-key-crypto&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In the previous lecture we talked about &lt;em&gt;public key cryptography&lt;/em&gt; and saw the Diffie Hellman system and the DSA signature scheme.&#xA;In this lecture, we will see the RSA trapdoor function and how to use it for both encryptions and signatures.&lt;/p&gt;&#xA;&lt;h2 id=&#34;some-number-theory&#34;&gt;&#xD;&#xA;  Some number theory.&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#some-number-theory&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;(See &lt;a href=&#34;http://www.shoup.net/ntb/&#34;&gt;Shoup&amp;rsquo;s excellent and freely available book&lt;/a&gt;  for extensive coverage of these and many other topics.)&lt;/p&gt;&#xA;&lt;p&gt;For every number $m$, we define $\Z_m$ to be the set ${0,\ldots,m-1}$ with the addition and multiplication operations modulo $m$.&#xA;When two elements are in $\Z_n$ then we will always assume that all operations are done modulo $m$ unless stated otherwise.&#xA;We let $\Z^&lt;em&gt;_m = { a\in \Z_m : gcd(a,m)=1 }$. Note that $m$ is prime if and only if $|\Z^&lt;/em&gt;_m|=m-1$.&#xA;For every $a \in \Z^&lt;em&gt;_m$ we can find using the extended gcd algorithm an element $b$ (typically denoted as $a^{-1}$) such that $ab=1$ (can you see why?).&#xA;The set $\Z^&lt;/em&gt;_m$ is an abelian group with the multiplication operation, and hence by the observations of the previous lecture,&#xA;$a^{|\Z^&lt;em&gt;_m|}=1$ for every $a\in \Z^&lt;/em&gt;_m$. In the case that $m$ is prime, this result is known as &amp;ldquo;Fermat&amp;rsquo;s Little Theorem&amp;rdquo; and is typically stated as $a^{p-1}=1 \pmod{p}$ for every $a\neq 0$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lattice based cryptography</title>
      <link>http://localhost:1313/docs/lec_12_lattices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_12_lattices/</guid>
      <description>&lt;h1 id=&#34;lattice-based-cryptography&#34;&gt;&#xD;&#xA;  Lattice based cryptography&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#lattice-based-cryptography&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Lattice based public key encryption (and its cousins known as knapsack and coding based encryption) have almost as long a history as discrete logarithm&#xA;and factoring based schemes.&#xA;Already in 1976, right after the Diffie-Hellman key exchange was discovered (and before RSA), Ralph Merkle was working on building public key encryption from the&#xA;NP hard &lt;em&gt;knapsack&lt;/em&gt; problem (see &lt;a href=&#34;http://cr.yp.to/bib/1988/diffie.pdf&#34;&gt;Diffie&amp;rsquo;s recollection&lt;/a&gt;). This can be thought of as the task of solving a linear equation of the&#xA;form $Ax = y$ (where $A$ is a given matrix, $y$ is a given vector, and the unknown are $x$) over the real numbers but with the additional constraint that $x$ must be either $0$ or $1$.&#xA;His proposal evolved into the Merkle-Hellman system proposed in 1978 (which was broken in 1984).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secure communication over insecure channels</title>
      <link>http://localhost:1313/docs/lec_13_handshake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_13_handshake/</guid>
      <description>&lt;h1 id=&#34;establishing-secure-connections-over-insecure-channels&#34;&gt;&#xD;&#xA;  Establishing secure connections over insecure channels&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#establishing-secure-connections-over-insecure-channels&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;We&amp;rsquo;ve now compiled all the tools that are needed for the basic goal of cryptography (which is still being subverted quite often) allowing Alice and Bob to exchange messages assuring their integrity and confidentiality over a channel that is observed or controlled by an adversary.&#xA;Our tools for achieving this goal are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Public key (aka asymmetric) encryption schemes.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Public key (aka asymmetric) digital signatures schemes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zero Knowledge proofs</title>
      <link>http://localhost:1313/docs/lec_14_zero_knowledge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_14_zero_knowledge/</guid>
      <description>&lt;h1 id=&#34;zero-knowledge-proofs&#34;&gt;&#xD;&#xA;  Zero knowledge proofs&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#zero-knowledge-proofs&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;The notion of &lt;em&gt;proof&lt;/em&gt; is central to so many fields.&#xA;In mathematics, we want to prove that a certain assertion is correct.&#xA;In other sciences, we often want to accumulate a preponderance of evidence (or statistical significance) to reject certain hypotheses.&#xA;In criminal law the prosecution famously needs to prove its case &amp;ldquo;beyond a reasonable doubt&amp;rdquo;.&#xA;Cryptography turns out to give some new twists on this ancient notion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fully Homomorphic Encryption</title>
      <link>http://localhost:1313/docs/lec_15_fhe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_15_fhe/</guid>
      <description>&lt;h1 id=&#34;chapfheone&#34;&gt;&#xD;&#xA;  Fully homomorphic encryption: Introduction and bootstrapping&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapfheone&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In today&amp;rsquo;s era of &amp;ldquo;cloud computing&amp;rdquo;, much of individuals&amp;rsquo; and businesses&amp;rsquo; data is stored and computed on by third parties such as Google, Microsoft, Apple, Amazon,  Facebook, Dropbox and many others.&#xA;Classically, cryptography provided solutions to protecting &lt;a href=&#34;https://www.schneier.com/blog/archives/2010/06/data_at_rest_vs.html&#34;&gt;data in motion&lt;/a&gt; from point A to point B.&#xA;But these are not always sufficient to protect &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_at_rest&#34;&gt;data at rest&lt;/a&gt; and particularly &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_in_use&#34;&gt;data in use&lt;/a&gt;.&#xA;For example, suppose that &lt;em&gt;Alice&lt;/em&gt; has some data $x \in {0,1}^n$ (in modern applications $x$ would well be terabytes in length or larger) that she wishes to store with the cloud service &lt;em&gt;Bob&lt;/em&gt;, but is afraid that Bob will be hacked, subpoenaed or simply does not completely trust Bob.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FHE II: Construction</title>
      <link>http://localhost:1313/docs/lec_16_fhe_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_16_fhe_part2/</guid>
      <description>&lt;h1 id=&#34;chapfhetwo&#34;&gt;&#xD;&#xA;  Fully homomorphic encryption: Construction&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapfhetwo&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In the last lecture we defined fully homomorphic encryption, and showed the &amp;ldquo;bootstrapping theorem&amp;rdquo; that transforms a partially homomorphic encryption scheme into a fully homomorphic encryption, as long as the original scheme can homomorphically evaluate its own decryption circuit.&#xA;In this lecture we will show an encryption scheme (due to Gentry, Sahai and Waters, henceforth GSW) meeting the latter property.&#xA;That is, this lecture is devoted to proving&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; the following theorem:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiparty secure computation</title>
      <link>http://localhost:1313/docs/lec_17_sfe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_17_sfe/</guid>
      <description>&lt;h1 id=&#34;sfeonechap&#34;&gt;&#xD;&#xA;  Multiparty secure computation I: Definition and Honest-But-Curious to Malicious complier&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sfeonechap&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Wikipedia &lt;a href=&#34;https://en.wikipedia.org/wiki/Cryptography&#34;&gt;defines&lt;/a&gt; cryptography as &amp;ldquo;the practice and study of techniques for secure communication in the presence of third parties called adversaries&amp;rdquo;.&#xA;However, I think a better definition would be:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;Cryptography is about replacing trust with mathematics.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;After all, the reason we work so hard in cryptography is because of a lack of trust.&#xA;We wouldn&amp;rsquo;t need encryption if Alice and Bob could be guaranteed that their communication, despite going through wireless and wired networks controlled and snooped upon by a plethora of entities, would be as reliable as if it has been hand delivered by a letter-carrier as reliable as &lt;a href=&#34;http://old.iolaregister.com/Local%20News/Stories/Weatherwontstopcarriers.html&#34;&gt;Patti Whitcomb&lt;/a&gt;, as opposed to the nosy Eve who might look in the messages, or the malicious Mallory, who might tamper with them.&#xA;We wouldn&amp;rsquo;t need zero knowledge proofs if Vladimir could simply say &amp;ldquo;trust me Barack, this is an authentic nuke&amp;rdquo;.&#xA;We wouldn&amp;rsquo;t need electronic signatures if we could trust that all software updates are designed to make our devices safer and not, to pick a random example, to turn our phones into surveillance devices.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MPC II: Construction from FHE</title>
      <link>http://localhost:1313/docs/lec_18_sfe_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_18_sfe_part2/</guid>
      <description>&lt;h1 id=&#34;sfetwochap&#34;&gt;&#xD;&#xA;  Multiparty secure computation II: Construction using Fully Homomorphic Encryption&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sfetwochap&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In the last lecture we saw the definition of secure multiparty computation, as well as the compiler reducing the task of achieving security in the general (malicious) setting to the passive (honest-but-curious) setting.&#xA;In this lecture we will see how using fully homomorphic encryption we can achieve security in the honest-but-curious setting.^[This is by no means the only way to get multiparty secure computation.&#xA;In fact, multiparty secure computation was known well before FHE was discovered. One common construction for achieving this uses a technique known as &lt;em&gt;Yao&amp;rsquo;s Garbled Circuit&lt;/em&gt;.]&#xA;We focus on the two party case, and so prove the following theorem:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quantum computing</title>
      <link>http://localhost:1313/docs/lec_19_quantum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_19_quantum/</guid>
      <description>&lt;h1 id=&#34;quantum-computing-and-cryptography-i&#34;&gt;&#xD;&#xA;  Quantum computing and cryptography I&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#quantum-computing-and-cryptography-i&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;I think I can safely say that nobody understands quantum mechanics.&amp;rdquo;&lt;/em&gt; , Richard Feynman, 1965&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;The only difference between a probabilistic classical world and the equations of the quantum world is that somehow or other it appears as if the probabilities would have to go negative &amp;ldquo;&lt;/em&gt;, Richard Feynman, 1982&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;There were two schools of natural philosophy in ancient Greece.&#xA;&lt;em&gt;Aristotle&lt;/em&gt; believed that objects have an &lt;em&gt;essence&lt;/em&gt; that explains their behavior, and a theory of the natural world has to refer to the &lt;em&gt;reasons&lt;/em&gt; (or &amp;ldquo;final cause&amp;rdquo; to use Aristotle&amp;rsquo;s language) as to why they exhibit certain phenomena.&#xA;&lt;em&gt;Democritus&lt;/em&gt; believed in a purely mechanistic explanation of the world.&#xA;In his view, the universe was ultimately composed of elementary particles (or &lt;em&gt;Atoms&lt;/em&gt;) and  our observed phenomena arise from the interactions between these particles according to some local rules.&#xA;Modern science (arguably starting with Newton) has embraced Democritus&amp;rsquo; point of view, of a mechanistic or &amp;ldquo;clockwork&amp;rdquo; universe of particles and forces acting upon them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quantum II: Shor</title>
      <link>http://localhost:1313/docs/lec_20_quantum_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_20_quantum_part2/</guid>
      <description>&lt;h1 id=&#34;quantum-computing-and-cryptography-ii&#34;&gt;&#xD;&#xA;  Quantum computing and cryptography II&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#quantum-computing-and-cryptography-ii&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Bell&amp;rsquo;s Inequality is powerful demonstration that there is something very strange going on with quantum mechanics.&#xA;But could this &amp;ldquo;strangeness&amp;rdquo; be of any use to solve computational problems not directly related to quantum systems?&#xA;A priori, one could guess the answer is &lt;em&gt;no&lt;/em&gt;.&#xA;In 1994 Peter Shor showed that one would be wrong:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;h1 id=&#34;shorthm&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#shorthm&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;The map that takes an integer $m$ into its prime factorization is efficiently quantumly computable. Specifically, it can be computed using $O(\log^3 m)$ quantum gates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software obfuscation</title>
      <link>http://localhost:1313/docs/lec_21_obfuscation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_21_obfuscation/</guid>
      <description>&lt;h1 id=&#34;software-obfuscation&#34;&gt;&#xD;&#xA;  Software Obfuscation&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software-obfuscation&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Let us stop and think of the notions we have seen in cryptography. We have seen that under reasonable computational assumptions (such as LWE) we can achieve the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CPA secure &lt;em&gt;private key encryption&lt;/em&gt; and &lt;em&gt;Message Authentication codes&lt;/em&gt; (which can be combined to get CCA security or authenticated encryption)- this means that two parties that share a key can have virtual secure channel between them. An adversary cannot get &lt;em&gt;any additional information&lt;/em&gt; beyond whatever is her prior knowledge given an encryption of a message sent from Alice to Bob. Moreover, she cannot modify this message by even a single bit. It&amp;rsquo;s lucky we only discovered these results from the 1970&amp;rsquo;s onwards&amp;mdash; if the Germans had used such an encryption instead of ENIGMA in World War II there&amp;rsquo;s no telling how many more lives would have been lost.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obfuscation II: applications</title>
      <link>http://localhost:1313/docs/lec_22_obfuscation_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_22_obfuscation_part2/</guid>
      <description>&lt;h1 id=&#34;more-obfuscation-exotic-encryptions&#34;&gt;&#xD;&#xA;  More obfuscation, exotic encryptions&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#more-obfuscation-exotic-encryptions&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Fully homomorphic encryption is an extremely powerful notion, but it does not allow us to obtain fine control over the access to information.&#xA;With the public key you can do all sorts of computation on the encrypted data, but you still do not learn it, while with the private key you learn everything.&#xA;But in many situations we want &lt;em&gt;fine grained access control&lt;/em&gt;: some people should get access to some of the information for some of the time.&#xA;This makes the &amp;ldquo;all or nothing&amp;rdquo; nature of traditional encryptions problematic.&#xA;While one could still implement such access control by interacting with the holder(s) of the secret key, this is not always possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Anonymous communication</title>
      <link>http://localhost:1313/docs/lec_23_anonymous/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_23_anonymous/</guid>
      <description>&lt;h1 id=&#34;anonymous-communication&#34;&gt;&#xD;&#xA;  Anonymous communication&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#anonymous-communication&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Encryption is meant to protect the contents of communication, but sometimes the bigger secret is that the communication existed in the first place.&#xA;If a whistleblower wants to leak some information to the New York Times, the mere fact that she sent an email would reveal her identity.&#xA;There are two main concepts aimed at achieving anonymity:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;Anonymous routing&lt;/em&gt; is about ensuring that Alice and Bob can communicate without that fact being revealed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethical, moral and policy considerations</title>
      <link>http://localhost:1313/docs/lec_24_policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_24_policy/</guid>
      <description>&lt;h1 id=&#34;ethical-moral-and-policy-dimensions-to-cryptography&#34;&gt;&#xD;&#xA;  Ethical, moral, and policy dimensions to cryptography&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ethical-moral-and-policy-dimensions-to-cryptography&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;This will not be a lecture but rather a discussion on some of the questions that arise from cryptography.&#xA;I would like you to read some of the sources below (and maybe others) and reflect on the following questions:&lt;/p&gt;&#xA;&lt;p&gt;The discussion is often framed as weighing privacy against security, but I encourage you to look critically at both issues.&#xA;It is often instructive to try to compare the current situation with both the historical past as well as some ideal desired world.&#xA;It is also worthwhile to consider cryptography in the broader contexts.&#xA;Some people on both the pro regulation and anti regulation camps exeggarate the role of cryptography.&lt;br&gt;&#xA;On one hand, cryptography is likely not to bring about the &amp;ldquo;crypto anarchy&amp;rdquo; regime hoped for in the crypto anarchist manifesto.&#xA;For example, more than the growth of bitcoin, we are seeing a turn away from cash into credit cards and other forms of much more traceable and &lt;em&gt;less&lt;/em&gt; anonymous forms of payments (interestingly, these forms of payments are often enabled by cryptography).&#xA;On the other hand, despite the fears raised by government agencies of &amp;ldquo;going dark&amp;rdquo; there are powerful commercial incentives to collect vast amounts of data and store them at search-warrant friendly servers.&#xA;Clearly technology is shifting the landscape of relationships among individuals, as well as between individuals and large organizations and governments.&#xA;Cryptography is an important component in these technologies but not the only one, and more than that, the ways technologies end up &lt;em&gt;used&lt;/em&gt; often has more to do with social and commercial factors than with the technologies themselves.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Course recap</title>
      <link>http://localhost:1313/docs/lec_25_course_recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lec_25_course_recap/</guid>
      <description>&lt;h1 id=&#34;course-recap&#34;&gt;&#xD;&#xA;  Course recap&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#course-recap&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;It might be worthwhile to recall what we learned in this course:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Perhaps first and foremost, that it is possible to &lt;em&gt;mathematically define&lt;/em&gt; what it means for a cryptographic scheme to be secure. In the cases we studied, such a definition could always be described as a &amp;ldquo;security game&amp;rdquo;. That is, we first define what it means for a scheme to be &lt;em&gt;insecure&lt;/em&gt;. Then, a scheme is secure if it is not insecure. The notion of &amp;ldquo;insecurity&amp;rdquo; is that there exists some adversarial strategy that succeeds with higher probability than what it should have. We normally don&amp;rsquo;t limit the &lt;em&gt;strategy&lt;/em&gt; of the adversary but only his or her &lt;em&gt;capabilities&lt;/em&gt;: its computational power and the type of access it has to the system (e.g., chosen plaintext, chosen ciphertext, etc.). We also talked how the notion of &lt;em&gt;secrecy&lt;/em&gt; requires &lt;em&gt;randomness&lt;/em&gt; and how many real-life failures of cryptosystems amount to faulty assumptions on the sources of randomness.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
